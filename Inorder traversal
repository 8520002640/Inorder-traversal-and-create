#include<stdio.h>
#include<stdlib.h>
struct node
{
 int data;
 struct node*left;
struct node*right;
};

structnode*newNode(int item)
{
  structnode*t=(struct node*)malloc(sizeof(structnode));
  t->data=item;
  t->left=t->right=NULL;
  return t;
}
struct node*insert(struct node*node,int value)
{
  if(node==NULL)
  return newNode(value);
  if(value<node->data)
  node->left=insert(node->left,value);
  else if(value>node->data)
  node->right=insert(node->right,value);
  return node;
}
void inorder(struct node*root)
{
  if(root==NULL)
  return;
  inorder(root->left);
  printf("%d->",root->data);
  inorder(root->right);
}
void main()
{
  struct node*root=NULL;
  root=insert(root,50);
  insert(root,40);
  insert(root,60);
  insert(root,30);
  insert(root,70);
  insert(root,20);
  insert(root,80);
  printf("\ninorder traversal \n");
  inorder(root);
}
